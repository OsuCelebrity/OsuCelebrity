package me.reddev.osucelebrity.osuapi;

import lombok.AccessLevel;

import lombok.Getter;
import lombok.Setter;
import lombok.ToString;
import org.tillerino.osuApiModel.types.GameMode;
import org.tillerino.osuApiModel.types.UserId;

import java.io.Serializable;
import java.util.StringTokenizer;

import javax.jdo.annotations.PersistenceCapable;
import javax.jdo.annotations.PrimaryKey;

@PersistenceCapable(objectIdClass = ApiUser.ComposedIdKey.class)
@Getter
@ToString
@Setter
public class ApiUser {
  @PrimaryKey
  @Getter(onMethod = @__(@UserId))
  @Setter(value = AccessLevel.PRIVATE, onParam = @__(@UserId))
  @UserId
  private int userId;

  @GameMode
  @Getter(onMethod = @__(@GameMode))
  @Setter(value = AccessLevel.PRIVATE, onParam = @__(@GameMode))
  @PrimaryKey
  private int gameMode;

  long downloaded;

  private int rank;

  private double pp;

  private int playCount;

  private double level;

  private double accuracy;

  private String country;

  /**
   * see http://www.datanucleus.org/products/accessplatform_3_3/jdo/primary_key.html
   */
  public static class ComposedIdKey implements Serializable {
    private static final long serialVersionUID = 1L;

    public int userId;
    public int gameMode;

    public ComposedIdKey() {}

    /**
     * Constructor accepting same input as generated by toString().
     */
    public ComposedIdKey(String value) {
      StringTokenizer token = new StringTokenizer(value, "::");
      this.userId = Integer.parseInt(token.nextToken());
      this.gameMode = Integer.parseInt(token.nextToken());
    }

    /**
     * compares all fields.
     */
    public boolean equals(Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof ComposedIdKey)) {
        return false;
      }
      ComposedIdKey key = (ComposedIdKey) obj;

      return userId == key.userId && gameMode == key.gameMode;
    }

    public int hashCode() {
      return userId ^ gameMode;
    }

    public String toString() {
      return this.userId + "::" + this.gameMode;
    }
  }

  /**
   * Constructs a new instance copying data from an api object.
   */
  public ApiUser(@UserId int userId, @GameMode int gameMode) {
    super();
    this.userId = userId;
    this.gameMode = gameMode;
  }
}
